pipeline:
  name: my-ci
  identifier: myci
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  variables:
    - name: cdExecutionId
      type: String
      default: 8iHSW6GeR267_8Vcmpw3vw
      value: <+input>
  stages:
    - stage:
        name: hello
        identifier: hello
        description: ""
        type: CI
        spec:
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: account.mywindowsk8s
                    image: alpine:3.21.3
                    shell: Bash
                    source:
                      type: Inline
                      spec:
                        script: |
                          #!/bin/bash
                          set -e

                          echo "Retrieving input details for execution ID: ${cdExecutionId}"

                          API_RESPONSE=$(curl -s -X GET "https://app.harness.io/pipeline/api/pipelines/execution/${cdExecutionId}/inputsetV2?accountIdentifier=aj5y95k4SRCnw5xNUzyTzQ&orgIdentifier=default&projectIdentifier=default_project&resolveExpressions=false&resolveExpressionsType=RESOLVE_ALL_EXPRESSIONS" \
                          -H 'x-api-key: <+secrets.getValue("harnessnextgenapikey")>')

                          echo "API Response received: $API_RESPONSE"

                          # Second API call to get execution details
                          EXECUTION_API_RESPONSE=$(curl -s -X GET "https://app.harness.io/pipeline/api/pipelines/execution/${cdExecutionId}?accountIdentifier=aj5y95k4SRCnw5xNUzyTzQ&orgIdentifier=default&projectIdentifier=default_project" \
                          -H 'x-api-key: <+secrets.getValue("harnessnextgenapikey")>')

                          echo "Execution API Response received: $EXECUTION_API_RESPONSE"
          cloneCodebase: false
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.mywindowsk8s
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        delegateSelectors:
          - kubernetes-delegate
