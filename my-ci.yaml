pipeline:
  name: my-ci
  identifier: myci
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  variables:
    - name: cdExecutionId
      type: String
      default: wsULKthXTQOhj2S31Vp5uQ
      value: <+input>
  stages:
    - stage:
        name: Container Run
        identifier: Container_Run
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: Container
                  name: Container_1
                  identifier: Container_1
                  spec:
                    connectorRef: account.harnessImage
                    image: alpine:3.21.3
                    command: echo "hello"
                    shell: Sh
                    infrastructure:
                      type: KubernetesDirect
                      spec:
                        connectorRef: mywindows
                        namespace: harness-delegate-ng
                        resources:
                          limits:
                            cpu: "0.5"
                            memory: 500Mi
                        annotations: {}
                        labels: {}
                        containerSecurityContext:
                          capabilities:
                            drop: []
                            add: []
                        nodeSelector: {}
                    reports:
                      type: JUnit
                      spec:
                        paths: []
                    outputVariables: []
                    envVariables: {}
                  timeout: 1h
            rollbackSteps: []
          serviceDependencies: []
          environment:
            environmentRef: dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: mykubernetes
        tags: {}
    - stage:
        name: shell
        identifier: shell
        description: ""
        type: Custom
        variables:
          - name: cdExecutionId
            type: String
            value: <+pipeline.variables.cdExecutionId>
        spec:
          environment:
            environmentRef: dev
            gitBranch: main
            deployToAll: false
            infrastructureDefinitions:
              - identifier: mykubernetes
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript
                  identifier: ShellScript
                  spec:
                    shell: Bash
                    executionTarget: {}
                    delegateSelectors:
                      - kubernetes-delegate
                    source:
                      type: Inline
                      spec:
                        script: |-
                          #!/bin/bash
                          set -ex

                          echo "Retrieving input details for execution ID: ${cdExecutionId}"

                          API_RESPONSE=$(curl -s -X GET "https://app.harness.io/pipeline/api/pipelines/execution/${cdExecutionId}/inputsetV2?accountIdentifier=aj5y95k4SRCnw5xNUzyTzQ&orgIdentifier=default&projectIdentifier=default_project&resolveExpressions=false&resolveExpressionsType=RESOLVE_ALL_EXPRESSIONS" \
                          -H 'x-api-key: <+secrets.getValue("account.harnessnextgenapikey")>')

                          echo "API Response received: $API_RESPONSE"

                          # Second API call to get execution details
                          EXECUTION_API_RESPONSE=$(curl -s -X GET "https://app.harness.io/pipeline/api/pipelines/execution/${cdExecutionId}?accountIdentifier=aj5y95k4SRCnw5xNUzyTzQ&orgIdentifier=default&projectIdentifier=default_project" \
                          -H 'x-api-key: <+secrets.getValue("account.harnessnextgenapikey")>')

                          echo "Execution API Response received: $EXECUTION_API_RESPONSE"
                    environmentVariables:
                      - name: cdExecutionId
                        type: String
                        value: <+stage.variables.cdExecutionId>
                    outputVariables: []
                  timeout: 10m
                  when:
                    stageStatus: Success
                    condition: "false"
        tags: {}
