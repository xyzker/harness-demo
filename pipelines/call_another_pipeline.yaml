pipeline:
  name: call another pipeline
  identifier: call_another_pipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: process entry
        identifier: process_entry
        description: ""
        type: Custom
        spec:
          environment:
            environmentRef: dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: mykubernetes
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          JSON_INPUT='<+pipeline.variables.jsonInput>'

                          TOTAL=$(echo "$JSON_INPUT" | jq 'length')
                          echo "TOTAL: $TOTAL"

                          MATRIX_DATA=$(echo "$JSON_INPUT" | jq -c ".[0:TOTAL] | to_entries | map({index: .key, data: .value})")
                          echo "MATRIX_DATA: $MATRIX_DATA"
                    environmentVariables: []
                    outputVariables:
                      - name: TOTAL
                        type: String
                        value: TOTAL
                      - name: MATRIX_DATA
                        type: String
                        value: MATRIX_DATA
                  timeout: 10m
        tags: {}
    - stage:
        name: call pipeline
        identifier: call_pipeline
        description: ""
        type: Pipeline
        strategy:
          repeat:
            items: <+pipeline.stages.process_entry.spec.execution.steps.ShellScript_1.output.outputVariables.MATRIX_DATA>
            maxConcurrency: 1
        spec:
          org: default
          pipeline: file_share
          project: default_project
          inputs:
            identifier: file_share
            variables:
              - name: text
                type: String
                value: <+pipeline.variables.text>
  variables:
    - name: jsonInput
      type: String
      description: ""
      required: true
      value: <+input>
